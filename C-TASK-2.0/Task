1 Write the following program :
Declare an integer array of size 100.
Assign numbers 1-100 to each element of the array.
Print all the numbers.
Print all even elements.
Print all odd elements.
Add also 5 to each element and print 6 – 105 numbers.
#include <stdio.h>
int main() {
    int i;
    
    printf("All numbers:\n");
    for (i = 1; i <= 100; i++) 
    printf("%d ", i);
    printf("\n\nEven numbers:\n");
    for (i = 2; i <= 100; i += 2) 
    printf("%d ", i);
    printf("\n\nOdd numbers:\n");
    for (i = 1; i <= 100; i += 2) 
    printf("%d ", i);
    printf("\n\nNumbers after adding 5:\n");
    for (i = 6; i <= 105; i++) 
    printf("%d ", i);
    printf("\n");
    
    return 0;
}
2 Write the following program :
Declare a character array without size.
Initialize the array with characters of your name.
Print your name using for loop.


#include <stdio.h>
int main() {
    char name[] = "Niladri"; 
    
    printf("Your name: ");
    for (int i = 0; name[i] != '\0'; i++) {
        printf("%c", name[i]);
    }
    printf("\n");
    
    return 0;
}

3 Declare an array of size 10. Enter 10 elements and save them in the array. Print the array . Find out the biggest and smallest numbers and their indexes and print.
#include <stdio.h>
int main() {
    int arr[10], i, max, min;
    printf("Enter 10 numbers:\n");
    for (i = 0; i < 10; i++) 
    scanf("%d", &arr[i]);
    max = min = arr[0];
    for (i = 1; i < 10; i++) {
        if (arr[i] > max) max = arr[i];
        if (arr[i] < min) min = arr[i];
    }
    printf("Array: ");
    for (i = 0; i < 10; i++) 
    printf("%d ", arr[i]);
    printf("\nBiggest: %d\nSmallest: %d\n", max, min);
    return 0;
}
4 Try experimenting with the below array syntaxes and see the results,check their sizes, try to also read values for elements and print them:</br>
#include <stdio.h>
int main() {
    int arr1[5] = {1, 2, 3, 4, 5};
    int arr2[] = {10, 20, 30};
    int arr3[5] = {0};
    int arr4[5];
    printf("Size of arr1: %lu bytes\n", sizeof(arr1));
    printf("Size of arr2: %lu bytes\n", sizeof(arr2));
    printf("Size of arr3: %lu bytes\n", sizeof(arr3));
    printf("Size of arr4: %lu bytes\n", sizeof(arr4));
    printf("Enter 5 values for arr4:\n");
    for (int i = 0; i < 5; i++) {
        scanf("%d", &arr4[i]);
    }
    printf("arr4 values: ");
    for (int i = 0; i < 5; i++) {
        printf("%d ", arr4[i]);
    }
    printf("\n");
    
    return 0;
}
4.Try experimenting with the below array syntaxes and see the results,check their sizes, try to also read values for elements and print them:</br>
int arr[5] = {};
int arr[10] = {2.4,5.6,7.3};
int arr[3] = {1,2,3,4,5};
int arr[0] = {};
int arr[0] = {1,2,3,4,5};
int arr[] = {};
int arr[‘a’];
#include <stdio.h>
int main() {
    int arr1[5] = {0}; 
    int arr2[10] = {2, 5, 7}; 
    int arr3[] = {1, 2, 3}; 
    int arr4[97]; 
    printf("Size of arr1: %lu bytes\\n", sizeof(arr1));
    printf("Size of arr2: %lu bytes\\n", sizeof(arr2));
    printf("Size of arr3: %lu bytes\\n", sizeof(arr3));
    printf("Size of arr4 (based on 'a'): %lu bytes\\n", sizeof(arr4));
    printf("Enter 5 values for arr1:\\n");
    for (int i = 0; i < 5; i++) {
        scanf("%d", &arr1[i]);
    }

    printf("arr1 values: ");
    for (int i = 0; i < 5; i++) {
        printf("%d ", arr1[i]);
    }
    printf("\\n");

    return 0;
}
5 Write the following program.
Declare an integer variable ‘size’.
Take the value of ‘size’ from user using scanf.
Declare an array of any datatype, and give the integer variable ‘size’, in place of size of the array  and initialize it to some values.(syntax: float array[size] = {1.0,2.5};)
Using for loop, try to take user input using scanf. Loop should execute ‘size’ number of times.
Using for loop, print the elements of the array.
#include <stdio.h>
int main() {
    int size;
    printf("Enter the size of the array: ");
    scanf("%d", &size);
    float array[size];
    printf("Enter %d float values:\n", size);
    for (int i = 0; i < size; i++) {
        scanf("%f", &array[i]);
    }
    printf("Array elements:\n");
    for (int i = 0; i < size; i++) {
        printf("%.2f ", array[i]);
    }
    printf("\n");
    
    return 0;
}
6 Write a function to search for a specific element given by the user, in an array and display its index.  Function takes array and element to search as inputs, and returns the index as output. If element not found, return -1.
