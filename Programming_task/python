Exercise 1: Calculate the Multiplication and Sum of Two Numbers
n1 =10;
n2 =20;
n3 = n1 + n2;
n4 = n1 * n2;
print("The addition of two numbers:",n3);
print("The multiplication of two numbers:",n4);

Exercise 2: Print the Sum of a Current Number and a Previous Number.
numbers = [10, 20, 30, 40]  # the input numbers
prev_index = 0              # index of previous number
curr_index = 1              # index of current number
sum = numbers[prev_index] + numbers[curr_index]  # correct way to get the sum
print("The sum of the numbers:", sum);

Exercise 3: Print Characters Present at an Even Index Number
text ="Hello World"; # input character
even_index=text[::2]; #the index of the character
print("The even index:", even_index);

Exercise 4: Remove First n Characters from a String
str = "HelloWorld"; #input string
index=3;  #the index of the string
remove_index=str[index::];  #the removed index of the string
print("Remove the index:", remove_index);

Exercise 5: Check if the First and Last Numbers of a List are the Same
Numbers=[10,20,30,40]; #the input numbers
n1=0; #the first index
n3=3; #the second index
if n1==n3:
        print("The numbers are same:");
else:
    print("The numbers are not same:");

Exercise 6: Display Numbers Divisible by 5
n = int(input("Enter a number:"));
if n % 5 == 0:
    print("The number is divisible by five.");
else:
    print("The number is not divisible by five.");

Exercise 7: Find the Number of Occurrences of a Substring in a String
text = "Python I am doing now and I am enjoying it too";
substring = "Python";
count = text.count(substring);
print("The number of occurrences of the substring:", count);

1. Write a program to print “Hello, World!” on the screen.
var = "Hello world";
print(var);


2. Write a program to add two numbers and display the sum.
n1= 10;
n2=20;
sum=n1+n2;
print("The sum of two numbers:",sum);

3. Write a program to find the largest of three numbers.
list={10,40,30};
print("The largest number is:",max(list));


4. Write a program to check whether a given number is even or odd.
num=int(input("Enter the number:"));
if num%2==0:
    print("The number is even:");
else:
    print("The number is odd:");

5. Write a program to find the sum of all the numbers in a list.
numbers = [10, 10, 20];  
print("The sum of the list:", sum(numbers));

6. Write a program to print the Fibonacci series up to a given number.
n = int(input("Enter a number: "));
a, b = 0, 1
while a <= n:
    print(a, end=" ");
    a, b = b, a + b

7. Write a program to convert Celsius to Fahrenheit.
celsius=int(input("Enter the celsius value:"));
fahrenheit=(celsius*(9/5)) +32;
print("The value in fahrenheit:",fahrenheit);


8. Write a program to find the factorial of a number.
import math
num = int(input("Enter a number: "));
print("The factorial of the number:", math.factorial(num));

9. Write a program to check whether a given number is prime or not.
num = int(input("Enter the number: "))
if num <= 1:
    print("The number is not prime.")
else:
    i = 2
    is_prime = True
    while i * i <= num:
        if num % i == 0:
            is_prime = False
            break
        i += 1
    if is_prime:
        print("The number is prime.")
    else:
        print("The number is not prime.")


11. Write a program to reverse a string.
str = "Hello"; 
reverse_str=str[::-1];  
print("Reverse the string:", reverse_str);

12. Write a program to find the sum of the digits of a given number.
num = input("Enter a number: ")
sum_digits = 0
for digit in num:
    sum_digits += int(digit)
print("Sum of the digits:", sum_digits)


13. Write a program to check whether a given string is a palindrome or not.
text = input("Enter a string: ")
if text == text[::-1]:
    print("The string is a palindrome.")
else:
    print("The string is not a palindrome.")



14. Write a program to find the area of a rectangle.
l=int(input("Enter the value:"));
b=int(input("Enter the value:"));
area=l * b;
print("The area of reactangle",area);

15. Write a program to find the area of a circle.
radius=int(input("Enter the value:"));
area= 3.14 * radius * radius;
print("the area of the circle:",area);


1. Write a program to find the second largest element in an array.
a = [10, 20, 30]
if a[0] > a[1]:
    l = a[0]
    s = a[1]
else:
    l = a[1]
    s = a[0]
for i in range(2, len(a)):
    if a[i] > l:
        s = l
        l = a[i]
    elif a[i] > s and a[i] != l:
        s = a[i]
print("Largest:", l)
print("Second largest:", s)

2. Write a program to sort a list of elements in ascending order.
numbers = [32, 15, 20, 5, 60];
sorted_list = sorted(numbers);
print("Sorted list:", sorted_list);

3. Write a program to remove duplicates from a list.
numbers = [10, 10, 20, 30];
unique_numbers = list(set(numbers));
print("Remove duplicate from the list:", unique_numbers);

4. Write a program to find the common elements between two lists.
n1 = [10, 15, 20, 30];
n2 = [10, 24, 27, 30];
unique_numbers = list(set(n1) & set(n2));
print("Common unique elements:", unique_numbers);

5. Write a program to find the factorial of a number using recursion.
def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)
num = int(input("Enter a number: "))
if num < 0:
    print("Factorial is not defined for negative numbers.")
else:
    print("Factorial of", num, "is:", factorial(num))

7. Write a program to implement binary search.
def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2

        if arr[mid] == target:
            return mid  
        elif arr[mid] < target:
            low = mid + 1  
        else:
            high = mid - 1  

    return -1  
arr = [8, 12, 17, 31, 32, 35] 
target = 12
result = binary_search(arr, target)
if result != -1:
    print(f"Element {target} found at index {result}.")
else:
    print(f"Element {target} not found in the array.")


8. Write a program to implement selection sort.
def selection_sort(arr):
    n = len(arr)
    for i in range(n):
        min_index = i  

        for j in range(i+1, n):
            if arr[j] < arr[min_index]:
                min_index = j 
        arr[i], arr[min_index] = arr[min_index], arr[i]
arr = [12, 31, 35, 8, 32, 17]
print("Original array:", arr)
selection_sort(arr)
print("Sorted array using Selection Sort:", arr)



9. Write a program to implement merge sort.
def merge_sort(arr):
    if len(arr) <= 1:
        return arr  
    mid = len(arr) // 2
    left_half = merge_sort(arr[:mid])
    right_half = merge_sort(arr[mid:])
    return merge(left_half, right_half)
def merge(left, right):
    result = []
    i = j = 0

    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    result.extend(left[i:])
    result.extend(right[j:])
    return result
arr = [12, 31, 35, 8, 32, 17]
print("Original array:", arr)
sorted_arr = merge_sort(arr)
print("Sorted array:", sorted_arr)

10. Write a program to implement quick sort.
def quick_sort(arr):
    if len(arr) <= 1:
        return arr  
    pivot = arr[0] 
    left = [x for x in arr[1:] if x < pivot]   
    right = [x for x in arr[1:] if x >= pivot] 
    return quick_sort(left) + [pivot] + quick_sort(right)
arr = [12, 31, 35, 8, 32, 17]
print("Original array:", arr)
sorted_arr = quick_sort(arr)
print("Sorted array using Quick Sort:", sorted_arr)

11. Write a program to find the sum of all the prime numbers between two given numbers.
def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def sum_of_primes(start, end):
    total = 0
    for num in range(start, end + 1):
        if is_prime(num):
            total += num
    return total
start = 10
end = 30
print(f"Sum of prime numbers between {start} and {end} is:", sum_of_primes(start, end))


12. Write a program to find the sum of all the even numbers between two given numbers.
def sum_of_even_numbers(start, end):
    total = 0
    for num in range(start, end + 1):
        if num % 2 == 0:
            total += num
    return total
start = 10
end = 20
print("Sum of even numbers between {start} and {end} is:", sum_of_even_numbers(start, end))

13. Write a program to find the sum of all the odd numbers between two given numbers.
def sum_of_odd_numbers(start, end):
    total = 0
    for num in range(start, end + 1):
        if num % 2 == 1:
            total += num
    return total
start = 1
end = 10
print("Sum of odd numbers between {start} and {end} is:", sum_of_odd_numbers(start, end))

14. Write a program to find the square root of a number using the Newton-Raphson method.
def newton_sqrt(number, tolerance=1e-10):
    if number < 0:
        return "Square root not defined for negative numbers"
    
    guess = number / 2.0  

    while abs(guess * guess - number) > tolerance:
        guess = (guess + number / guess) / 2.0  

    return guess
num = 25
result = newton_sqrt(num)
print(f"Square root of {num} is approximately: {result}")

15. Write a program to find the power of a number using recursion.
def power(base, exponent):
    if exponent == 0:
        return 1  
    else:
        return base * power(base, exponent - 1)
base = 3
exponent = 4
result = power(base, exponent)
print(f"{base} raised to the power {exponent} is: {result}")


















